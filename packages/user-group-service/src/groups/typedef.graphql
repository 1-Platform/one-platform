type Query {
  """
  Returns a list of all Groups (default limit=25)
  """
  listGroups(limit: Int): [Group]
  """
  Returns a list of Groups for the given selector query (default limit=25)
  """
  getGroupsBy(selector: GetGroupInput!, limit: Int): [Group]
}

type Mutation {
  """
  Add a new Group Mapping (i.e. A new One Platform Group corresponding to a Rover Group)
  """
  addGroup(payload: AddGroupInput!): Group
  """
  Updates a Group with id using values from the payload
  """
  updateGroup(id: ID!, payload: UpdateGroupInput!): Group
  """
  Removes a group matching the given inputs
  """
  deleteGroup(id: ID!): Group
}

scalar DateTime

type Group {
  _id: ID
  name: String
  ldapCommonName: String
  createdOn: DateTime
  updatedOn: DateTime
}

input AddGroupInput {
  name: String!
  ldapCommonName: String!
}

input GetGroupInput {
  _id: ID
  name: String
  ldapCommonName: String
}

input UpdateGroupInput {
  name: String
  ldapCommonName: String
}
