scalar DateTime

type ScheduledandTriggerType {
  startDate: String
  time: String
  action: String
}

input ScheduledandTriggerInput {
  startDate: String
  time: String
  action: String
}

type UserType {
  _id: String
  name: String
  title: String
  uid: String
  rhatUUID: String
  memberOf: [String]
  isActive: Boolean
  apiRole: APIROLE
  createdBy: String
  createdOn: DateTime
  updatedBy: String
  updatedOn: DateTime
}

type NotificationsConfigType {
  template: String
  source: [UserType]
  channel: String
  type: String
  typeOptions: ScheduledandTriggerType
  target: String
  createdBy: String
  createdOn: DateTime
  modifiedBy: String
  modifiedOn: DateTime
}

input NotificationsConfigInput {
  template: String
  source: String
  channel: String
  type: String
  typeOptions: ScheduledandTriggerInput
  target: String
  createdBy: String
  createdOn: DateTime
  modifiedBy: String
  modifiedOn: DateTime
}

# Query Definitions
type Query {
  listNotificationsConfigs: [NotificationsConfigType]
  getNotificationsConfigById(id: String!): NotificationsConfigType
}

# Mutation Definitions
type Mutation {
  createdNotificationsConfig(
    input: NotificationsConfigInput
  ): NotificationsConfigType
  updateNotificationsConfig(
    input: NotificationsConfigInput
  ): NotificationsConfigType
  deleteNotificationsConfig(id: String!): NotificationsConfigType
}

# type Subscription {
#   # Subscriptions Definitions
#   createdNotificationsConfig: NotificationsConfigType
#   updatedNotificationsConfig: NotificationsConfigType
# }
