# Query Definitions
type Query {
  listNotificationsConfigs: [NotificationsConfigType]
  getNotificationsConfigBy(
    notificationsConfig: NotificationsConfigInput!
  ): [NotificationsConfigType]
  getNotificationsConfigByID(id: ID!): NotificationsConfigType
}

# Mutation Definitions
type Mutation {
  createNotificationsConfig(
    notificationsConfig: NotificationsConfigInput
  ): NotificationsConfigType
  updateNotificationsConfig(
    notificationsConfig: NotificationsConfigInput
  ): NotificationsConfigType
  deleteNotificationsConfig(id: String!): NotificationsConfigType
}

# type Subscription {
#   # Subscriptions Definitions
#   createdNotificationsConfig: NotificationsConfigType
#   updatedNotificationsConfig: NotificationsConfigType
# }

scalar DateTime

type ScheduledandTriggerType {
  startDate: String
  time: String
  action: String
}

input ScheduledandTriggerInput {
  startDate: String
  time: String
  action: String
}

type UserType {
  _id: String
  uid: String
  name: String
}

type HomeType {
  _id: String
  name: String
  link: String
  entityType: String
  owners: [UserType]
}

type NotificationsConfigType {
  id: ID
  template: String
  source: HomeType
  channel: String
  type: String
  typeOptions: ScheduledandTriggerType
  target: String
  createdBy: String
  createdOn: DateTime
  updatedBy: String
  updatedOn: DateTime
}

input NotificationsConfigInput {
  id: ID
  template: String
  source: String
  channel: String
  type: String
  typeOptions: ScheduledandTriggerInput
  target: String
  createdBy: String
  createdOn: DateTime
  updatedBy: String
  updatedOn: DateTime
}
