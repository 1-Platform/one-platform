scalar DateTime

# API Aceess Roles Defined in the APIs
enum APIROLE {
  ADMIN
  USER
}

# LDAP Data model which returns from ldap source
type LdapType {
  dn: String
  controls: [String]
  memberOf: [String]
  rhatContactMethod: String
  roomInt: String
  rhatOfficeFloor: String
  rhatOfficeLocation: String
  registeredAddress: String
  street: String
  physicalDeliveryOfficeName: String
  postalCode: Int
  rhatCostCenterDesc: String
  rhatUUID: String
  uidInt: Int
  rhatJobTitle: String
  employeeType: String
  rhatAdjSvcDate: String
  co: String
  rhatAmbassadorED: String
  l: String
  cn: String
  mobile: String
  manager: String
  c: String
  homeDirectory: String
  rhatOraclePersonID: Int
  loginShell: String
  st: String
  rhatTeamLead: Boolean
  sn: String
  rhatSupervisorID: Int
  uid: String
  title: String
  rhatPersonType: String
  rhatNickName: String
  displayName: String
  telephoneInt: Int
  gidInt: Int
  rhatPhoneExt: Int
  rhatLocation: String
  rhatCostCenter: Int
  givenName: String
  rhatGeo: String
  preferredTimeZone: String
  rhatHireDate: String
  rhatCurrency: String
  rhatPrimaryMail: String
  employeeInt: Int
  rhatWorkHours: String
  mail: String
  rhatOriginalHireDate: String
  rhatLegalEntity: String
  rhatJobCode: Int
  rhatBJNMeetingID: Int
  rhatSocialURL: [String]
  rhatJobRole: String
  rhatBJNUserName: String
  objectClass: [String]
}

type ProfileType {
  kerberosID: String
  name: String
}

type TimestampType {
  createdAt: DateTime
  createdBy: ProfileType
  modifiedAt: DateTime
  modifiedBy: ProfileType
}

input ProfileInput {
  kerberosID: String
  name: String
}

input TimestampInput {
  createdAt: DateTime
  createdBy: ProfileInput
  modifiedAt: DateTime
  modifiedBy: ProfileInput
}

type UserType {
  _id: String
  name: String
  title: String
  uid: String
  rhatUUID: String
  memberOf: [String]
  isActive: Boolean
  apiRole: APIROLE,
  timestamp: TimestampType
}
input UserInput {
  _id: String
  name: String
  title: String
  uid: String
  rhatUUID: String
  memberOf: [String]
  isActive: Boolean
  apiRole: APIROLE,
  timestamp: TimestampInput
}

type Mutation  {
  # Add a new User
  addUser(input: UserInput): UserType
  # Update existing User
  updateUser(input: UserInput): UserType
  # Delete a User by ID
  deleteUser(_id: String!): UserType
}

type Query  {
  # Fetches specific User by id
  getUser(uid: String!): UserType
  # Fetches all Users
  listUsers: [UserType]
  # Login user
  userLogin(uid: String!): UserType
  # Fetch LDAP Group Members
  getGroupMembers(cn: String): [LdapType]
}
