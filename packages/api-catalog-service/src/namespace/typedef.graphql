enum ApiCategory {
  REST
  GRAPHQL
}

enum ApiSortType {
  CREATED_AT
  UPDATED_AT
}

type HeaderType {
  key: String
  value: String
}

input HeaderInput {
  key: String
  value: String
}

type NSEnvironmentType {
  name: String
  apiBasePath: String
}

input NSEnvironmentInput {
  name: String
  apiBasePath: String
}

type NamespaceType {
  id: ID
  name: String
  slug: String
  description: String
  category: ApiCategory
  tags: [String]
  owners: [ApiOwnerType]
  appUrl: String
  environments: [NSEnvironmentType]
  hash: String
  schemaEndpoint: String
  headers: [HeaderType]
  subscribers: [ApiSubscriberType]
  lastCheckedOn: DateTime
  createdOn: DateTime
  createdBy: ApiUserType
  updatedOn: DateTime
  updatedBy: ApiUserType
}

type NamespaceCount {
  all: Int
  graphql: Int
  rest: Int
}

type NamespaceSubscriberStatusType {
  subscribed: Boolean
}

type PaginatedNamespaceType {
  count: Int
  data: [NamespaceType]
}

input NamespaceInput {
  id: ID
  name: String!
  slug: String
  description: String
  category: ApiCategory!
  tags: [String]
  owners: [ApiOwnerInput]!
  appUrl: String
  environments: [NSEnvironmentInput]!
  schemaEndpoint: String!
  headers: [HeaderInput]
  subscribers: [ApiSubscriberInput]
  lastCheckedOn: DateTime
  createdOn: DateTime
  createdBy: String
  updatedOn: DateTime
  updatedBy: String
}

type Query {
  """
  List all API namespaces
  """
  listNamespaces(
    search: String
    limit: Int
    offset: Int
    sortBy: ApiSortType
    mid: String
    apiCategory: ApiCategory
  ): PaginatedNamespaceType
  """
  To get a particular namespace by id
  """
  getNamespaceById(id: ID!): NamespaceType
  """
  To get count of namespaces of type REST and GRAPHQL
  """
  getNamespaceCount(search:String,mid:String): NamespaceCount
  """
  To know whether particular email has been subscribed to a namespace
  """
  getNamespaceSubscriberStatus(id: ID!, email: String!): NamespaceSubscriberStatusType
  """
  Fetch the API Schema
  """
  fetchAPISchema(
    category: ApiCategory
    schemaEndpoint: String
    headers: [HeaderInput]
  ): String
}

type Mutation {
  """
  Create an API namespace record
  """
  createNamespace(payload: NamespaceInput!): NamespaceType
  """
  Update an API namespace record
  """
  updateNamespace(id: ID!, payload: NamespaceInput!): NamespaceType
  """
  Delete an API namespace record
  """
  deleteNamespace(id: ID!): NamespaceType
  """
  Add subscriber to the namespace environments
  """
  addNamespaceSubscriber(id: ID!, payload: ApiSubscriberInput!): NamespaceType
  """
  Remove subscriber from namespace environments.
  """
  removeNamespaceSubscriber(
    id: ID!
    payload: ApiSubscriberInput!
  ): NamespaceType
}
