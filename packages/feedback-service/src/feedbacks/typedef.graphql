scalar URI
scalar JSON
scalar DateTime


type FeedbackAssigneeType {
  name: String
  uid: String
  rhatUUID: String
  email: String
  url: String
}

type FeedbackIndexResponseCode {
  status: Int
}

input StackInfoInput {
  stack: String
  path: String
}

type StackInfoType {
  stack: String
  path: String
}

enum FeedbackCategory {
  BUG
  FEEDBACK
}

type FeedbackUserProfileType {
  cn: String
  mail: String
  uid: String
  rhatUUID: String
}

type FeedbackType {
  id: ID
  summary: String
  description: String
  stackInfo: StackInfoType
  experience: String
  error: String
  config: String
  state: String
  ticketUrl: String
  category: FeedbackCategory
  source: String
  module: String
  assignee: FeedbackAssigneeType
  createdOn: DateTime
  createdBy: String
  updatedOn: DateTime
  updatedBy: String
}

input FeedbackInput {
  id: ID
  summary: String
  description: String
  stackInfo: StackInfoInput
  experience: String
  error: String
  config: String
  ticketUrl: String
  category: FeedbackCategory
  createdOn: DateTime
  createdBy: String
  updatedOn: DateTime
  updatedBy: String
}

type PaginatedFeedbackType {
  count: Int
  data: [FeedbackType]
}
type Query {
  """
  List All Feedbacks
  """
  listFeedbacks(
    search: String
    limit: Int
    offset: Int
    category: FeedbackCategory
  ): PaginatedFeedbackType
  """
  List the Feedback by id and appId parameters
  """
  getFeedbackBy(
    id: ID
    appId: ID
    search: String
    limit: Int
    offset: Int
    category: FeedbackCategory): PaginatedFeedbackType
}

type Mutation {
  """
  Create Feedback and open tickets
  """
  createFeedback(input: FeedbackInput!): FeedbackType
  """
  Update Feedback infomation on database
  """
  updateFeedback(id:ID!, input: FeedbackInput!): FeedbackType
  """
  Delete feedback with _id parameter
  """
  deleteFeedback(id: ID!): FeedbackType
  """
  Update Feedback Index for Search
  """
  updateFeedbackIndex: FeedbackIndexResponseCode
}
