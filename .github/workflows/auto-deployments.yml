name: Auto deployment for dev and qa

on:
  push:
    branches:
      - master
  # TODO: Should be removed after testing
  pull_request:
    branches:
      - master

jobs:
  get-changed-spas:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check changed files
        id: changed-files
        uses: tj-actions/changed-files@v32.1.2
        with:
          dir_names: true
          json: true

      - id: set-matrix
        run: echo "matrix={\"container\":${{ steps.changed-files.outputs.all_changed_files }}}" >> "$GITHUB_OUTPUT"

  matrix-job:
    name: Job for ${{ matrix.container }}
    runs-on: ubuntu-latest
    needs: [get-changed-spas]
    strategy:
      matrix: ${{ fromJSON(needs.get-changed-spas.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        if: contains(matrix.container, '-spa')
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        if: contains(matrix.container, '-spa')
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: 'packages/**/package-lock.json'
      - name: Get curl command and SPA NAME as strings
        id: get-spa-name
        if: contains(matrix.container, '-spa')
        uses: actions/github-script@v6
        with:
          script: |
            const spaName = "${{ matrix.container }}".split('/')[1];
            core.setOutput('spa-name', spaName)
      - name: Build and deploy SPA on DEV
        if: contains(matrix.container, '-spa')
        env:
          SPASHIP_DEPLOY_URL: "${{ secrets.SPASHIP_DEPLOY_URL }}dev"
        run: |
          cd ${{ matrix.container }}
          echo ${{ steps.get-spa-name.outputs.spa-name }}
          curl -k --header "PRIVATE-TOKEN:${{ secrets.GITLAB_TOKEN }}" "${{ secrets.GITLAB_URL }}spa-configs%2Fdev%2F${{ steps.get-spa-name.outputs.spa-name }}%2F.env/raw?ref=master" -o .env
          npm run build
          export VERSION=\$(node -p "require('./package.json').version")
          npx @spaship/cli@latest deploy --apikey=${{ secrets.SPASHIP_API_KEY }} \
          --env=$SPASHIP_DEPLOY_URL \
          --ref=\$VERSION
      # - name: Build and deploy SPA on QA
      #   if: contains(matrix.container, '-spa')
      #   env:
      #     SPASHIP_DEPLOY_URL: "${{ secrets.SPASHIP_DEPLOY_URL }}qa"
      #   run: |
      #     cd ${{ matrix.container }}
      #     curl -k --header "PRIVATE-TOKEN:${{ secrets.GITLAB_TOKEN }}" "${{ secrets.GITLAB_URL }}spa-configs%2Fqa%2F${{ steps.get-spa-name.outputs.spa-name }}%2F.env/raw?ref=master" -o .env
      #     npm run build
      #     export VERSION=\$(node -p "require('./package.json').version")
      #     npx @spaship/cli@latest deploy --apikey=${{ secrets.SPASHIP_API_KEY }} \
      #     --env=$SPASHIP_DEPLOY_URL \
      #     --ref=\$VERSION
