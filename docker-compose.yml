version: "3"

services:
  ssi-templates:
    build: ./packages/ssi-service/.
    env_file: ./packages/ssi-service/.env
    environment:
      SSI_HOSTNAME: /.include/nav
    volumes:
      - ./packages/ssi-service/dist:/var/www/html/.include/nav
      - ./packages/ssi-service/public/index.html:/var/www/html/index.html
    ports:
      - 5500:8080

  home-spa:
    build: ./packages/home-spa
    env_file: ./packages/home-service/.env
    ports:
      - 5500:8080
    depends_on:
      - home-service

  api-gateway:
    build: ./packages/api-gateway-service
    command: npm start
    env_file: ./packages/api-gateway-service/.env
    environment:
      HOME_SERVICE_SERVICE_HOST: home-service
      FEEDBACK_SERVICE_SERVICE_HOST: feedback-service
      USER_SERVICE_SERVICE_HOST: user-service
      NOTIFICATIONS_SERVICE_SERVICE_HOST: notifications-service
      REDIS_SERVICE_HOST: redis
      HOME_SERVICE_SERVICE_PORT: 8080
      FEEDBACK_SERVICE_SERVICE_PORT: 8080
      USER_SERVICE_SERVICE_PORT: 8080
      NOTIFICATIONS_SERVICE_SERVICE_PORT: 8080
    volumes:
      - ./packages/api-gateway-service:/app
    ports:
      - 8080:8080
    depends_on:
      - home-service
      - feedback-service
      - user-service
      - notifications-service
      - redis

  home-service:
    build: ./packages/home-service
    command: npm start
    env_file: ./packages/home-service/.env
    environment:
      DB_PATH: mongo
      USER_SERVICE_SERVICE_HOST: user-service
      USER_SERVICE_SERVICE_HOST: 8080
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/home-service:/app
    ports:
      - 8081:8080
    depends_on:
      - mongo
      - redis

  feedback-service:
    build: ./packages/feedback-service
    command: npm start
    env_file: ./packages/feedback-service/.env
    environment:
      DB_PATH: mongo
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/feedback-service:/app
    ports:
      - 8082:8080
    depends_on:
      - mongo
      - redis

  user-service:
    build: ./packages/user-service
    command: npm start
    env_file: ./packages/user-service/.env
    environment:
      DB_PATH: mongo
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/user-service:/app
    ports:
      - 8083:8080
    depends_on:
      - mongo
      - redis

  notifications-service:
    build: ./packages/notifications-service
    command: npm start
    env_file: ./packages/notifications-service/.env
    environment:
      DB_PATH: mongo
      HOME_SERVICE_SERVICE_HOST: home-service
      HOME_SERVICE_SERVICE_PORT: 8080
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/notifications-service:/app
    ports:
      - 8084:8080
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo:4
    restart: always
    logging:
      driver: none
    volumes:
      - ./tmp/db:/data/db
    ports:
      - 37017:27017

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    restart: on-failure
    logging:
      driver: none
