version: "3"
services:
  httpd:
    image: spaship/httpd:latest
    restart: always
    logging:
      driver: none
    volumes:
      # - ./packages/home-spa/dist:/var/www/html/home
      # - ./packages/feedback-spa/dist:/var/www/html/feedback
      # - ./packages/notification-spa/dist:/var/www/html/notifications
      # - ./packages/search-spa/dist:/var/www/html/search
      # - ./packages/user-group-spa/build:/var/www/html/user-groups
      # - ./packages/developer-console-spa/build:/var/www/html/console
      # - ./packages/lighthouse-spa/dist:/var/www/html/lighthouse
      - ./packages/ssi-service/public/index.html:/var/www/html/index.html
      - ./packages/ssi-service/dist:/var/www/html/.ssi/nav
      - ./packages/ssi-service/dist:/var/www/html/assets
    ports:
      - 5500:8080

  api-gateway:
    build: ./packages/api-gateway-service
    command: npm start
    env_file: ./packages/api-gateway-service/.env
    environment:
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/api-gateway-service:/app
    ports:
      - 8080:8080
    depends_on:
      - apps-service
      - feedback-service
      - user-group-service
      - notifications-service
      - search-service

  apps-service:
    build: ./packages/apps-service
    command: npm start
    environment:
      MONGO_URL: mongodb://mongo:27017/apps-service
    volumes:
      - ./packages/apps-service:/usr/src
    ports:
      - 8081:8080
    depends_on:
      - mongo

  feedback-service:
    build: ./packages/feedback-service
    command: npm start
    env_file: ./packages/feedback-service/.env
    environment:
      DB_PATH: mongo
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/feedback-service:/app
    ports:
      - 8082:8080
    depends_on:
      - mongo
      - redis

  user-group-service:
    build: ./packages/user-group-service
    command: npm start
    env_file: ./packages/user-group-service/.env
    environment:
      DB_PATH: mongo
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/user-group-service:/app
    ports:
      - 8083:8080
    depends_on:
      - mongo
      - redis

  notifications-service:
    build: ./packages/notifications-service
    command: npm start
    env_file: ./packages/notifications-service/.env
    environment:
      DB_PATH: mongo
      HOME_SERVICE_SERVICE_HOST: home-service
      HOME_SERVICE_SERVICE_PORT: 8080
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/notifications-service:/app
    ports:
      - 8084:8080
    depends_on:
      - mongo
      - redis

  search-service:
    build: ./packages/search-service
    command: npm start
    env_file: ./packages/search-service/.env
    environment:
      DB_PATH: mongo
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/search-service:/app
    ports:
      - 8085:8080
    depends_on:
      - mongo
      - redis

  lighthouse-service:
    build: ./packages/lighthouse-service
    command: npm start
    env_file: ./packages/lighthouse-service/.env
    environment:
      DB_PATH: mongo
      REDIS_SERVICE_HOST: redis
    volumes:
      - ./packages/lighthouse-service:/app
    ports:
      - 8086:8080
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo:4
    restart: always
    logging:
      driver: none
    volumes:
      - ./tmp/db:/data/db
    ports:
      - 37017:27017

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    restart: on-failure
    logging:
      driver: none
